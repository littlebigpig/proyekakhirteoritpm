# This file configures the analyzer, which statically analyzes Dart code to
# check for errors, warnings, and lints.
#
# The issues identified by the analyzer are surfaced in the UI of Dart-enabled
# IDEs (https://dart.dev/tools#ides-and-editors). The analyzer can also be
# invoked from the command line by running `flutter analyze`.

# The following line activates a set of recommended lints for Flutter apps,
# packages, and plugins designed to encourage good coding practices.
include: package:flutter_lints/flutter.yaml

analyzer:
  exclude:
    - "**/*.g.dart" # Exclude generated files
    - "**/*.freezed.dart" # Exclude generated files

dart_code_metrics:
  metrics:
    cyclomatic-complexity: 20 # Ambang batas untuk cyclomatic complexity. Di atas ini akan diperingatkan.
    halstead-volume: 1000 # Ambang batas untuk Halstead Volume.
    lines-of-code: 100 # Ambang batas untuk total baris kode.
    maximum-nesting-level: 5 # Ambang batas untuk tingkat nesting.
    number-of-parameters: 5 # Ambang batas untuk jumlah parameter.
    source-lines-of-code: 80 # Ambang batas untuk baris kode sumber (non-kosong, non-komentar).
    maintainability-index: 50 # Ambang batas untuk Maintainability Index (makin rendah makin buruk).
  metrics-exclude:
    - test/** # Kecualikan folder test dari analisis metrik
  rules:
    # Anda juga bisa menambahkan aturan lint di sini jika ingin.
    # Contoh:
    # - avoid-unnecessary-setstate
    # - prefer-trailing-comma
    # dll.